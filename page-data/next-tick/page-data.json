{"componentChunkName":"component---src-templates-blog-post-js","path":"/next-tick/","result":{"data":{"site":{"siteMetadata":{"title":"feiker的小站"}},"markdownRemark":{"id":"7a9a8aef-7119-5b9f-aa3d-0f81b118caa8","excerpt":"Vue.nextTick()有什么作用？实现原理是什么？ vue 开发时，更新响应式数据后，如果想立马拿到 dom 元素做点什么，就需要用到 Vue.nextTick() 那么什么是 nextTick，为什么要用到 nextTick，以及 nextTick 是如何实现的 什么是 nextTick 在 vue…","html":"<h2>Vue.nextTick()有什么作用？实现原理是什么？</h2>\n<ol>\n<li>vue 开发时，更新响应式数据后，如果想立马拿到 dom 元素做点什么，就需要用到 Vue.nextTick()</li>\n<li>那么什么是 nextTick，为什么要用到 nextTick，以及 nextTick 是如何实现的</li>\n</ol>\n<h4>什么是 nextTick</h4>\n<p>在 vue 里面，数据更新后，我们是无法立马拿到响应数据更新后的 dom 的，nextTick 就是 vue 的 api，如果想要操作 dom，可以通过这个 api 获取</p>\n<p>以下是<a href=\"https://cn.vuejs.org/v2/api/#Vue-nextTick\">vue 官方文档</a></p>\n<blockquote>\n<p>在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。</p>\n</blockquote>\n<h4>为什么需要用到 nextTick</h4>\n<p>浏览器里面频繁操作 dom 会非常影响性能，某个 dom 的宽高变化可能都会引起整个页面的重排重绘，个人认为，vue 这种框架对开发者来说最重要的有两块，一个是数据绑定，另外一个就是虚拟 dom，这两个都去解决了一个问题，避免开发者直接去操作 dom。</p>\n<p>vue.nextTick 就是上述背景的一个产物，我们在更改响应式数据的时候，vue 不会检测到一次数据更新，就去更新一下 dom，甚至不会去改 vdom，它会先有一个 diff 的计算，比如有个计数器<code class=\"language-text\">count</code>,如果<code class=\"language-text\">count</code>从 0 加到 1 了，diff 会算出 count 这个值从 0 变为了 1，然后把变化 1 这个结果 patch 到 vdom 上，最后再更新到真实 dom 上，如果\n<code class=\"language-text\">count</code>从 0 加到 1000，同理，diff 只会算出 count 从 0 变到了 1000，然后做一次 patch 操作，并不会做 1000 次。</p>\n<p>以上过程中，如果 count 多次变化，vue 会把 count 的 watcher 推到一个更新队列里面，在下一个<code class=\"language-text\">tick</code>去计算最终变化后的 count，然后去执行相关的 watcher，这样避免了不必要的性能开销，<code class=\"language-text\">nextTick</code> 就是在 count 所有变化后并更新到 dom 上之后去执行的。</p>\n<h4>nextTick 实现原理</h4>\n<p>上述下一个<code class=\"language-text\">Tick</code>其实就是下一次事件循环，所以只要是可以放到下一次事件循环的函数都可以用来实现 nextTick，vue 里面采取了以下策略去实现 nextTick</p>\n<ol>\n<li>如果浏览器支持 promise，就用 promise.resolve(fn) 来实现</li>\n<li>否则，如果浏览器支持 MutationObserver，用 MutationObserver</li>\n<li>如果浏览器支持 setImmediate，用 setImmediate</li>\n<li>如果上述都不支持，用 setTimeout 兜底</li>\n</ol>\n<p>Vue 2.0 的源码见这 <a href=\"https://github.com/vuejs/vue/blob/dev/src/core/util/next-tick.js\">nextTick 源码 </a></p>\n<p>自己实现一个不用 <code class=\"language-text\">mutionObserver</code> 的 <code class=\"language-text\">nextTick</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">nextTick</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">cb</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> queueMicrotask <span class=\"token operator\">=</span>\n    <span class=\"token keyword\">typeof</span> queueMicrotask <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span>\n      <span class=\"token operator\">?</span> queueMicrotask\n      <span class=\"token punctuation\">:</span> Promise <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span> <span class=\"token operator\">=></span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">?</span> setImmediate <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span> <span class=\"token operator\">=></span> <span class=\"token function\">setImmediate</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">:</span> <span class=\"token parameter\">cb</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTimout</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">queueMicrotask</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><em>ps: 看了下 vue3 的 <a href=\"https://github.com/vuejs/vue-next/blob/555e3be69d39f4b35a312916253d9f38cbcab495/packages/runtime-core/src/scheduler.ts#L10\">nextTick</a> 好像只用了 promise，可能之后会补充</em></p>","frontmatter":{"title":"vue.nextTick 原理解析","date":"November 13, 2019","description":"vue.nextTick有什么作用，以及其实现原理"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/next-tick/","previous":{"fields":{"slug":"/delete-file/"},"frontmatter":{"title":"删除文件是否需要写权限"}},"next":{"fields":{"slug":"/xpath实现/"},"frontmatter":{"title":"xpath和css selector实现"}}}}}