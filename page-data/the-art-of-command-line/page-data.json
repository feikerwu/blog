{"componentChunkName":"component---src-templates-blog-post-js","path":"/the-art-of-command-line/","result":{"data":{"site":{"siteMetadata":{"title":"feiker的小站"}},"markdownRemark":{"id":"36d0ba34-e60d-5041-99f7-27662f1c5931","excerpt":"鉴于最近在服务器上操作比较多，之前对命令行一直是似懂非懂，所以趁此机会重学一下命令行，在 github 上找到一个 6w 多 star 的库，the art of cammand line, 这里做一下阅读笔记 tips  可以在 bash 搜索脚本执行的历史记录  清屏，类似与 clear…","html":"<p>鉴于最近在服务器上操作比较多，之前对命令行一直是似懂非懂，所以趁此机会重学一下命令行，在 github 上找到一个 6w 多 star 的库，<a href=\"https://github.com/jlevy/the-art-of-command-line\">the art of cammand line</a>, 这里做一下阅读笔记</p>\n<h4>tips</h4>\n<ul>\n<li><code class=\"language-text\">ctrl + r</code> 可以在 bash 搜索脚本执行的历史记录</li>\n<li><code class=\"language-text\">ctrl + l</code> 清屏，类似与 clear</li>\n<li><code class=\"language-text\">man readline</code> 查看命令行的快捷键(osx 内不行)</li>\n<li><code class=\"language-text\">cd -</code> 回到前一个工作路径</li>\n<li><code class=\"language-text\">!!</code> 执行上一个命令</li>\n<li>在命令的最前面添加#可以将这条命令给注释掉，example, 命令写到一半，通过<code class=\"language-text\">ctrl a #</code>注释命令，下次通过<code class=\"language-text\">ctrl + r</code>进入命令搜索再次执行</li>\n<li>xargs</li>\n</ul>\n<p>xargs 标准输入转化为命令行参数，有些命令不支持标准输入，必须得在命令行输入参数，这时候就可以用 xargs 转化</p>\n<ul>\n<li>xargs 用法\nxargs 使用格式</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">xargs</span> <span class=\"token punctuation\">[</span>-options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>tee 用于将标准输出写到文本文件</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> -al <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> file.txt <span class=\"token comment\"># 将当前的文件信息保存到file.txt文件</span></code></pre></div>\n<ul>\n<li>sort 用来对文本排序并将排序内容输出</li>\n<li>grep 全称(global search regular expression(RE) and print out the line) 全面搜索正则表达式并把行打印出来\n用的比较多的是 <code class=\"language-text\">grep -E &#39;reg&#39; file</code> 在 file 里面去搜索某些正则可以匹配出来的内容</li>\n<li>du (disk usage) 用于查看当前文件的大小</li>\n<li>lsof(list open file)打开所有打开的文件</li>\n<li>type 来查看命令的类型</li>\n</ul>\n<h4>参考</h4>\n<ul>\n<li><a href=\"https://explainshell.com/\">explainshell 一个解释 bash 命令的一个工具</a></li>\n<li><a href=\"https://github.com/tldr-pages/tldr\">可以替换 man page更简洁的工具</a></li>\n</ul>","frontmatter":{"title":"the art of cammand line","date":"November 21, 2019","description":"《the-art-of-command-line》读书笔记"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/the-art-of-command-line/","previous":{"fields":{"slug":"/xpath实现/"},"frontmatter":{"title":"xpath和css selector实现"}},"next":{"fields":{"slug":"/TCP连接/"},"frontmatter":{"title":"tcp三次握手"}}}}}